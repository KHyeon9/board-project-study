plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.boardproject'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //QueryDSL 설정
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' // Spring 3.0이상의 경우 셋팅법
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    // Spring 3.0 이상에서 아래와 같이 셋팅을 해야합니다.
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"


}

tasks.named('test') {
    useJUnitPlatform()
}

// QueryDSL 설정부
def generated = 'src/main/generated'

// QueryDSL QClass 파일 생성 위치 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// Java Source set 에 QueryDSL QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// Gradle Clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}